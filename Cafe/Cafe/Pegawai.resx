<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>